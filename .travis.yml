language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

before_install:
  - chmod +x gradlew

script: "./gradlew clean build"

before_deploy:
#  - zip -r tehyoyee-springboot *
#  - mkdir -p deploy
#  - mv tehyoyee-springboot.zip deploy/tehyoyee-springboot.zip
  - mkdir -p before-deploy # 디렉토리 단위로만 업로드할 수 있기 때문에 deploy 디렉토리를 항상 생성
  - cp scripts/*.sh before-deploy/ # zip파일에 포함시킬 파일들을 저장
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/tehyoyee-springboot.zip

deploy: # S3로 파일업로드 혹은 CodeDeploy로 배포 등 외부서비스와 연동내용을 선언
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings

    bucket: tehyoyee-springboot-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리 여기 위치의 파일들만 S3로 전송
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings

    bucket: tehyoyee-springboot-build # S3 버킷
    key: tehyoyee-springboot.zip # 빌드 파일을 압축해서 전달

    bundle_type: zip # 압축 확장자
    application: tehyoyee-springboot # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션

    deployment_group: tehyoyee-springboot-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹

    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료시 메일로 열람
notifications:
  email:
    recipients:
      - tehyoyee@gmail.com